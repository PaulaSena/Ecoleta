Populando pagina de Cadastro

document.querySelectorAll("form input")
NodeList(3) [input, input, input]

no google digitar
 
ibge serviços api

função fetch("https://servicodados.ibge.gov.br/api/v1/localidades/estados
")

Promisse 
Vou ir e voltar com ou sem dados
.then(function(res) {}) 

função fetch("https://servicodados.ibge.gov.br/api/v1/localidades/estados
").então(function(anônima) {console.log(anônima)})


Essa promessa vai ao local e trás ou não algo.
então. com uma função trarei o que esta nessa pagina 
e exibirei na tela com o comando consolog e o nome da função nomeada 

promessa  fetch("https://vai ao local e trás ou não algo")
então.  then(function(res){ console.log(res)})


*******

Argumento 
fetch("https://servicodados.ibge.gov.br/api/v1/localidades/estados")
.then(function(res){ console.log(res)})

de enter ||  retornou :

Promisse {<pending>}
VM207:1 Response {type: "cors", url: "https://servicodados.ibge.gov.br/api/v1/localidades/estados", redirected: false, status: 200, ok: true, …}

ok agora precisamos transformar esses dados em Json para saber os dados q poderei utilizar.

TRANSFORMANDO RESPOSTA EM JSON

fetch("https://servicodados.ibge.gov.br/api/v1/localidades/estados")
.then(function (res){console.log(res.json)})

Retorn outra promessa

fetch("https://servicodados.ibge.gov.br/api/v1/localidades/estados")
.then(function (res){return res.json() })
.then(function(data){console.log(data)})


Na pagina create-point vou buscar o campo a ser populado.


Como chamou uma promessa entao retorne os dados da promessa e exiba em cosole.log.

erol font

()=>{
      
  })
*******************

 document
 // Essa query utiliza o campo select em busca um seletor especifico de nome UF 
 .querySelector("select [name=uf]")
 // Ouvidor de eventos mudança Ex: Click, carregamento de pagina
  .addEventListener("chaches", () => {
      console.log("mudei")

  })

*******************

********Passo 1********* 

Popular pagina de cadastro..

           // 2 teste no navegador com edição do option no create-point | Console

    
    function populateUFs(){
        const ufSelect = document.querySelector("select[name=uf]") 

        fetch("https://servicodados.ibge.gov.br/api/v1/localidades/estados")
        .then( res => res.json())
        .then( states => {

          for( const state of states){

            ufSelect.innerHTML += `<option value="${state.id}">${state.nome}</option>`
          }

  
        })
      }

      populateUFs() 

       // 1 teste no navegador com edição do option no create-point | Console

    document
      .querySelector("select[name=uf]")
      .addEventListener("change", () => {
          console.log("Mudei")
        } )




///  Sempre que o comando document teste 1 realizar a mudança do seletor uf ira buscar na função 
///  populateUF() o id e o nome na api para polular automaticamente.



******** Passo 2 ********* 

https://servicodados.ibge.gov.br/api/v1/localidades/estados/{UF}/municipios


Criação do For para popular automaticamente 






